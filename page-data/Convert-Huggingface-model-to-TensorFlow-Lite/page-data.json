{
    "componentChunkName": "component---src-templates-note-template-js",
    "path": "/Convert-Huggingface-model-to-TensorFlow-Lite",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Convert Huggingface model to TensorFlow Lite\",\n  \"created\": \"2022-02-28T20:51\",\n  \"updated\": \"2022-02-28T20:51\",\n  \"tags\": [\"huggingface\", \"how-to\", \"machine-learning\", \"tensorflow\", \"tflite\"],\n  \"stage\": \"seedling\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"overview\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#overview\",\n    \"aria-label\": \"overview permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Overview\"), mdx(\"p\", null, \"I needed to convert a Hugging Face TensorFlow \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://huggingface.co/microsoft/DialoGPT-small\"\n  }, \"model\"), \" to TensorFlow Lite (tflite) and did so with the method below.\"), mdx(\"p\", null, \"While it's straightforward to convert, the challenge here was that the TensorFlow model accepts a dynamic input shape \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"(1, N)\"), \" , where \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"N\"), \" is the number of tokens in the input.\"), mdx(\"p\", null, \"According to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/tensorflow/tensorflow/issues/41807\"\n  }, \"this\"), \" GitHub issue discussion, the recommendation is to set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"N\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"None\"), \".\"), mdx(\"h1\", {\n    \"id\": \"method\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#method\",\n    \"aria-label\": \"method permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Method\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"import tensorflow as tf\\nfrom transformers import TFAutoModelForCausalLM, AutoTokenizer\\n\\n\\ndef convert(model, filename):\\n    \\\"\\\"\\\"Convert a TensorFlow model to tflite with a dynamic input shape\\\"\\\"\\\"\\n\\n    # Set TensorSpec to have a dynamic shape\\n    input_spec = tf.TensorSpec([1, None], tf.int32)\\n    \\n    print(input_spec)\\n\\n    # Save to correct tensor dims\\n    model._saved_model_inputs_spec = None\\n    model._set_save_spec(input_spec)\\n\\n    # Convert\\n    converter = tf.lite.TFLiteConverter.from_keras_model(model)\\n    tflite_model = converter.convert()\\n\\n    # Save the model.\\n    with open(filename, 'wb') as f:\\n      f.write(tflite_model)\\n    \\n    print(f\\\"Saved to {filename}\\\")\\n\\n    return tflite_model\\n\\n\\n# Example\\n\\npretrained_model = \\\"microsoft/DialoGPT-small\\\"\\ntokenizer = AutoTokenizer.from_pretrained(pretrained_model)\\nmodel = TFAutoModelForCausalLM.from_pretrained(pretrained_model)\\nfilename = \\\"model.tflite\\\"\\n\\n# Convert Tf model\\ntflite_model = convert(model, filename)\\n\\n\")), mdx(\"h1\", {\n    \"id\": \"limitationsquestions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#limitationsquestions\",\n    \"aria-label\": \"limitationsquestions permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Limitations/Questions\"), mdx(\"p\", null, \"This all said, there may be issues with using this dynamic input size, particularly with regard to \"), mdx(\"h1\", {\n    \"id\": \"references\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#references\",\n    \"aria-label\": \"references permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/tensorflow/tensorflow/issues/41807\"\n  }, \"https://github.com/tensorflow/tensorflow/issues/41807\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://discuss.huggingface.co/t/how-can-we-test-transformer-models-after-converting-it-to-tflite-format/1670\"\n  }, \"https://discuss.huggingface.co/t/how-can-we-test-transformer-models-after-converting-it-to-tflite-format/1670\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/huggingface/tflite-android-transformers/blob/master/models_generation/distilbert.py\"\n  }, \"https://github.com/huggingface/tflite-android-transformers/blob/master/models_generation/distilbert.py\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bhadreshpsavani/UnderstandingNLP/blob/master/Notebooks/TFLite/TFLiteExperiments.ipynb\"\n  }, \"https://github.com/bhadreshpsavani/UnderstandingNLP/blob/master/Notebooks/TFLite/TFLiteExperiments.ipynb\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://huggingface.co/docs/transformers/v4.16.2/en/internal/generation_utils#transformers.generation_utils.GreedySearchDecoderOnlyOutput\"\n  }, \"https://huggingface.co/docs/transformers/v4.16.2/en/internal/generation_utils#transformers.generation_utils.GreedySearchDecoderOnlyOutput\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/huggingface/transformers/blob/8f5d62fdb10ea2130b2206d6ffb84286f6022811/src/transformers/pipelines/text_generation.py\"\n  }, \"https://github.com/huggingface/transformers/blob/8f5d62fdb10ea2130b2206d6ffb84286f6022811/src/transformers/pipelines/text_generation.py\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://stackoverflow.com/questions/55701663/input-images-with-dynamic-dimensions-in-tensorflow-lite\"\n  }, \"https://stackoverflow.com/questions/55701663/input-images-with-dynamic-dimensions-in-tensorflow-lite\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://stackoverflow.com/questions/64264788/tflite-dynamic-input-shape\"\n  }, \"https://stackoverflow.com/questions/64264788/tflite-dynamic-input-shape\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/huggingface/transformers/blob/c4d4e8bdbd25d9463d41de6398940329c89b7fb6/src/transformers/generation_utils.py#L101\"\n  }, \"https://github.com/huggingface/transformers/blob/c4d4e8bdbd25d9463d41de6398940329c89b7fb6/src/transformers/generation_utils.py#L101\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/huggingface/transformers/blob/c4d4e8bdbd25d9463d41de6398940329c89b7fb6/src/transformers/generation_tf_utils.py\"\n  }, \"TensorFlow Generation Utils\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/huggingface/transformers/issues/5232\"\n  }, \"https://github.com/huggingface/transformers/issues/5232\"), \" \")));\n}\n;\nMDXContent.isMDXComponent = true;","inboundReferences":[],"frontmatter":{"title":"Convert Huggingface model to TensorFlow Lite","created":"2022-02-28T20:51","updated":"2022-02-28T20:51","tags":["huggingface","how-to","machine-learning","tensorflow","tflite"],"stage":"seedling"},"tableOfContents":{"items":[{"url":"#overview","title":"Overview"},{"url":"#method","title":"Method"},{"url":"#limitationsquestions","title":"Limitations/Questions"},{"url":"#references","title":"References"}]}}},"pageContext":{"slug":"Convert-Huggingface-model-to-TensorFlow-Lite"}},
    "staticQueryHashes": []}